import streamlit as st
import pandas as pd
import plotly.express as px

# Wczytanie danych
df = pd.read_csv("data/imdb_top_1000.csv")

# Konwersja kolumny Gross na liczby
df["Gross"] = df["Gross"].replace("[,$]", "", regex=True).astype(float)

# Tytu≈Ç aplikacji
st.title("üé¨ Rekomendacje film√≥w")

# Wyb√≥r film√≥w przez u≈ºytkownika
selected = st.multiselect("Wybierz swoje ulubione filmy:", df["Series_Title"].tolist())

# Sprawdzenie, czy u≈ºytkownik wybra≈Ç filmy
if selected:
    # Filtrowanie danych dla wybranych film√≥w, usuwanie NaN i sortowanie malejƒÖco wed≈Çug Gross
    selected_df = (
        df[df["Series_Title"].isin(selected)][["Series_Title", "Released_Year", "Gross"]]
        .dropna(subset=["Gross"])
        .sort_values(by="Gross", ascending=False)
    )

    # Sprawdzenie, czy po odfiltrowaniu co≈õ zosta≈Ço
    if not selected_df.empty:
        # Tworzenie wykresu s≈Çupkowego z Plotly i gradientem kolor√≥w
        fig = px.bar(
            selected_df,
            x="Series_Title",
            y="Gross",
            color="Gross",
            color_continuous_scale=["red", "yellow", "green"],  # Gradient: czerwony ‚Üí ≈º√≥≈Çty ‚Üí zielony
            title="Zysk wybranych film√≥w",
            labels={"Series_Title": "Tytu≈Ç filmu", "Gross": "Zysk"},
        )

        # Automatyczne dostosowanie osi Y
        fig.update_layout(
            yaxis=dict(
                tickformat="~s",  # Format SI (np. 100M, 1B)
                title="Zysk",
                showgrid=True,
                zeroline=True,
            ),
            xaxis=dict(
                title="Tytu≈Ç filmu",
            ),
            title_font_size=14,
            xaxis_tickangle=45,
            showlegend=False,
            margin=dict(r=50),
            coloraxis_showscale=False,
        )

        # Wy≈õwietlenie wykresu w Streamlit
        st.plotly_chart(fig, use_container_width=True)

        # Dodanie kolumny z numerami porzƒÖdkowymi
        selected_df.reset_index(drop=True, inplace=True)  # Reset indeks√≥w dla poprawnej numeracji
        selected_df.index += 1  # Dodanie numeracji od 1

        # Wy≈õwietlenie tabeli z numerami porzƒÖdkowymi
        st.write("üé• Wybrane filmy (posortowane wed≈Çug zysku):")
        st.table(selected_df.reset_index()[["index", "Series_Title", "Released_Year", "Gross"]].rename(columns={"index": "Lp."}))
    else:
        st.write("Wybrane filmy nie majƒÖ danych o zysku (Gross). Wybierz inne filmy!")
else:
    st.write("Wybierz przynajmniej jeden film, aby zobaczyƒá wykres!")
